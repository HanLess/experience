思路：
在数组中随便取一个数（通常是第一个）为界，大于它的放在右边，小于等于它的放在左边，递归执行


var mysort = function(arr){
	if(arr.length > 1){
        var mid = arr.shift()
        var left = [] , right = []
        for(let i = 0;i < arr.length;i ++){
            if(arr[i] < mid){
                left.push(arr[i])
            }else{
                right.push(arr[i])
            }
        }
        var s_left = mysort(left)
        var s_right = mysort(right)

        var re = []
        re = re.concat(s_left)
        re.push(mid)
        re = re.concat(s_right)
        return re
    }else{
        return arr
    }
}

优化：
不再把第一个元素当成 界，取范围内的随机位为界

var mid_index = Math.floor(Math.random() * arr.length)
var mid = arr[mid_index]
arr.splice(mid_index,1)

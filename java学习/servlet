Servlet的生命周期分为5个阶段：加载、创建、初始化、处理客户请求、卸载。
(1)加载：容器通过类加载器使用servlet类对应的文件加载servlet
(2)创建：通过调用servlet构造函数创建一个servlet对象
(3)初始化：调用init方法初始化
(4)处理客户请求：每当有一个客户请求，容器会创建一个线程来处理客户请求
(5)卸载：调用destroy方法让servlet自己释放其占用的资源

servlet的init方法只执行一次，即初始化的时候执行，之后每次接受到客户端的请求，会调用service方法，根据请求的类型，有service方法判断执行doPost或doGet，
处理请求后，调用destory方法释放资源

servlet 开发总结：
https://www.cnblogs.com/xdp-gacl/p/3760336.html
http://www.cnblogs.com/xdp-gacl/p/3763559.html
http://www.cnblogs.com/xdp-gacl/p/3789624.html
http://www.cnblogs.com/xdp-gacl/p/3791993.html

tomcat加载servlet的三种情况：
1）在web.xml中设置了<load-on-startup>1</load-on-startup>标签，数字越小，越先加载
2）客户端第一次请求的时候
3）servlet类被修改的时候

servlet在多线程下其本身并不是线程安全的。
如果在类中定义成员变量，而在service中根据不同的线程对该成员变量进行更改，那么在并发的时候就会引起错误。
最好是在方法中，定义局部变量，而不是类变量或者对象的成员变量。
由于方法中的局部变量是在栈中，彼此各自都拥有独立的运行空间而不会互相干扰，因此才做到线程安全。
